apply plugin: 'java'
apply plugin: 'com.google.protobuf'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.0'
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

def grpcVersion = '1.3.0' // CURRENT_GRPC_VERSION

dependencies {
    compile "io.grpc:grpc-netty:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"

    testCompile "junit:junit:4.11"
    testCompile "org.mockito:mockito-core:1.9.5"
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.2.0'
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {
                option 'enable_deprecated=false'
            }
        }
    }
}
apply plugin: 'idea'

idea {
    module {
        sourceDirs += file("${projectDir}/build/generated/source/proto/main/java");
        sourceDirs += file("${projectDir}/build/generated/source/proto/main/grpc");
    }
}


apply plugin: 'application'

startScripts.enabled = false

task ServerSide(type: CreateStartScripts) {
    mainClassName = 'ru.spbau.mit.Server'
    applicationName = 'server'
    outputDir = new File(project.buildDir, 'log')
    classpath = jar.outputs.files + project.configurations.runtime
}

task ClientSide(type: CreateStartScripts) {
    mainClassName = 'ru.spbau.mit.Client'
    applicationName = 'client'
    outputDir = new File(project.buildDir, 'log')
    classpath = jar.outputs.files + project.configurations.runtime
}

applicationDistribution.into('bin') {
    from(ServerSide)
    from(ClientSide)
    fileMode = 0755
}